#+TITLE:       个人笔记
#+AUTHOR:      ShengLi
#+EMAIL:       qcl6355@gmail.com
#+DATE:        2016-03-27 Sun
#+URI:         /blog/%y/%m/%d/个人笔记
#+KEYWORDS:    <TODO: insert your keywords here>
#+TAGS:        Emacs,MXNet,C++,Java,Javascript,Rabit
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: 一些问题的解决方法

* MXNet编译相关
** no 'return_type' compile error
可能是子模块的版本不对应造成的，解决方法：git pull & git submodule update & make clean & make -j


* rabit框架使用总结
1. Allreduce peforms reduction across different computation nodes and
returns the result to every node.
2. Broadcast is another method, this function allows one node to broadcast
its local data to all other nodes.
#+BEGIN_SRC c++
  #include <rabit.h>

  int main(int argc, char *argv[]) {
    rabit::Init(argc, argv);
    // load the latest checked model
    int version = rabit::LoadCheckPoint(&model);

    // initialize the model if it is the first version
    if (version == 0) model.InitModel();
    // the version number marks the iteration to resume
    for (int iter = version; iter < max_iter; ++iter) {
      // at this point, the model object should allow us to recover the program state

      // each iteration can contain multiple calls of allreduce/broadcast
      rabit::Allreduce<rabit::op::Max>(&data[0], n);

      // checkpoint model after one iteration finishes
      rabit::Checkpoint(&model);
    }
    rabit::Finalize();
    return 0;
  }

#+END_SRC
